name: Deploy AboutMeSite to GitHub Pages

on:
  push:
    branches: [main]

permissions:
  contents: write

env:
  ACTIONS_STEP_DEBUG: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Debug root directory
        run: ls -la

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Debug project directory
        run: ls -la

      - name: Install dependencies
        run: bun install

      - name: Debug project structure before modification
        run: |
          echo "Project structure before API removal:"
          find ./src -type d | sort
          echo "Checking if API directory exists:"
          ls -la ./src/app/api || echo "No API directory found at ./src/app/api"

      - name: Check package.json scripts
        run: cat package.json

      - name: Update build script if needed
        run: |
          # Check if package.json contains "next export" and remove it
          if grep -q "next export" package.json; then
            echo "Updating package.json to remove deprecated 'next export' command..."
            sed -i 's/"build": "next build && next export"/"build": "next build"/' package.json
            echo "Updated package.json:"
            cat package.json
          else
            echo "No 'next export' found in package.json, no changes needed"
          fi

      # Modified static export step for custom domain:
      # Modified static export step for custom domain:
      - name: Prepare for static export
        run: |
          # Remove API routes that can't be statically exported but keep the client-side tRPC code
          if [ -d "./src/app/api" ]; then
            echo "API directory exists, removing for static export"
            rm -rf ./src/app/api
          else
            echo "No API directory found, skipping removal"
          fi

          # Create environment variable for build time to disable server components
          echo "SKIP_ENV_VALIDATION=true" >> .env

          # Create next.config.js file for custom domain
          echo 'const config = {
            output: "export",
            distDir: "out",
            trailingSlash: true,
            images: {
              unoptimized: true
            }
          };

          export default config;' > next.config.js
          cat next.config.js

      - name: Debug after preparing for static export
        run: |
          echo "Project structure after API removal:"
          find ./src -type d | sort
          echo "Next.js config:"
          cat next.config.js

      - name: Build
        run: bun run build
        ENV:
          SKIP_ENV_VALIDATION: true

      - name: Debug directory structure after build
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Next.js build directory:"
          ls -la .next || echo "No .next directory found"
          echo "Checking for out directory:"
          ls -la out || echo "No out directory found"

      - name: List build artifacts
        run: |
          echo "Files in out directory:"
          ls -la out || echo "No out directory found"
          echo "Checking out directory structure:"
          find ./out -type f | head -n 20 || echo "Could not list files in out directory"

      - name: Create font manifest files
        run: |
          mkdir -p out/server
          echo '{}' > out/server/next-font-manifest.json
          echo '{}' > out/server/font-manifest.json
      - name: Add CNAME file
        run: echo 'hackwithmatt.dev' > out/CNAME

      - name: Debug project directories
        run: |
          echo "Checking project files:"
          find ./src/app/projects -type f | sort
          echo "Checking output files:"
          find ./out/projects -type f | sort || echo "No projects directory in output"

      - name: Add .nojekyll file
        run: touch out/.nojekyll

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
